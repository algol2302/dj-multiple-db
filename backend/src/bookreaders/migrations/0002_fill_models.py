# Generated by Django 2.2.7 on 2019-11-21 16:52
import logging
import random

from django.db import migrations
from faker import Faker

logger = logging.getLogger(__name__)


def fill_models(apps, schema_editor):
    Book = apps.get_model('bookreaders', 'Book')
    Reader = apps.get_model('bookreaders', 'Reader')

    # this migration will work 2 times!
    total = range(5000)

    for i in total:

        # create books
        books = []
        for _ in range(100):
            book = Book(
                title=Faker().sentence(4),
                author=Faker().name()
            )
            books.append(book)

        # for each database
        Book.objects.using('default').bulk_create(books)
        Book.objects.using('replica').bulk_create(books)

        # create readers
        readers = []
        for _ in range(50):
            reader = Reader(
                first_name=Faker().first_name(),
                last_name=Faker().last_name(),
            )
            readers.append(reader)

        Reader.objects.using('default').bulk_create(readers)
        Reader.objects.using('replica').bulk_create(readers)

        # random assignation of books
        if bool(random.choices([0, 1])):

            # list of last 10 books for default database
            real_books = list(
                Book.objects.using('default').all().order_by('-created_at')[:10]
            )

            if real_books:

                readers = Reader.objects.using(
                    'default'
                ).all().order_by('-created_at')[:10]

                for reader in readers:

                    random_books = random.sample(
                        real_books, random.randint(1, 5)
                    )
                    reader.books.set(random_books)

                    Reader.objects.using(
                        'replica'
                    ).get(id=reader.id).books.set(random_books)

        if not (i % 10):
            logging.info(f'{i} items from {len(total)} are filled')


class Migration(migrations.Migration):

    dependencies = [
        ('bookreaders', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(fill_models, migrations.RunPython.noop)
    ]
